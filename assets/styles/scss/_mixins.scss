// THEME
@mixin theme() {
    .pv- {
        @content;
    }
}

// CONTAINER
@mixin containerFluid($fillScreen: false) {
    width: 100%;

    @if $fillScreen == true {
        height: 100%;
    }
}

@mixin container($maxWidth: 1200px, $sideClearance: 20px) {
    max-width: $maxWidth;
    padding-inline: $sideClearance;
    margin-inline: auto;
}

// BROWSER CORES ATTRIBUTES
@mixin setBrowserCores($attr, $value, $cores: ("moz", "webkit")) {
    #{$attr}: #{$value};

    @each $core in $cores {
        -#{$core}-#{$attr}: #{$value};
    }
}

// BORDER RADIUS
@mixin borderRadius($radius: $radius-default) {
    @include setBrowserCores(border-radius, $radius);
}

@mixin rounded() {
    @include borderRadius(50%);
}

// FLEXBOX
@mixin flex($justifyContent: center, $alignItems: center, $flexWrap: wrap) {
    display: flex;
    justify-content: $justifyContent;
    align-items: $alignItems;
    flex-wrap: $flexWrap;
}

@mixin flexBasis($basis, $gap: 0) {
    @if $gap !=0 {
        flex-basis: calc($basis - $gap);
    }

    @else {
        flex-basis: $basis;
    }
}

@mixin flex1($gap: 0) {
    @include flexBasis(100%, $gap);
}

@mixin flex2($gap: 0) {
    @include flexBasis(calc(100% / 2), calc($gap + ($gap / 2)));
}

@mixin flex3($gap: 0) {
    @include flexBasis(calc(100% / 3), calc($gap + ($gap / 3)));
}

@mixin flex4($gap: 0) {
    @include flexBasis(calc(100% / 4), calc($gap + ($gap / 4)));
}

// POSITION
// Relative
@mixin relative() {
    position: relative;
}

// Absolute
@mixin absolute($top: 0, $left: 0) {
    position: absolute;
    top: $top;
    left: $left;
}

@mixin absoluteFull($top: 0, $left: 0, $fillScreen: false) {
    @include absolute($top, $left);
    @include fullWidthContainer($fillScreen);
}

// Fixed
@mixin fixed($top: 0, $left: 0) {
    position: fixed;
    top: $top;
    left: $left;
}

// BACKGROUND IMAGE
@mixin backgroundImage($image: "", $repeat: no-repeat, $size: cover, $position: center center) {
    @if $image != "" {
        background-image: url("../../../assets/images/#{$image}");
    }

    background-repeat: $repeat;
    background-size: $size;
    background-position: $position;
}

@mixin backgroundOverlay($image: "", $repeat: no-repeat, $size: cover, $position: center center, $opacity: 0.1, $blendMode: multiply) {
    @include relative;

    &::before {
        content: "";
        @include absoluteFull;
        z-index: 0;
        opacity: $opacity;
        mix-blend-mode: $blendMode;

        @include backgroundImage($image, $repeat, $size, $position);
    }
}

// TRANSITIONS AND ANIMATIONS
@mixin transition($property: all, $duration: 300ms, $timingFunction: ease, $delay: 0s) {
    transition: $property $duration $timingFunction $delay;
}

// RESPONSIVE DESIGN
@mixin setResponsiveDesign($screenWidth, $isMaxWidth: false) {    
    @if $isMaxWidth == true {
        @media screen and (max-width: $screenWidth) {
            @content;
        }
    }

    @else {
        @media screen and (min-width: $screenWidth) {
            @content;
        }
    }
}